# Specify current major version of docker compose.
# See https://docs.docker.com/compose/compose-file/compose-versioning/
version: '3'

services:
  screener:
    image: wic-mt-demo-project-eligibility-screener-nextjs:latest
    command: ["yarn", "dev"]
    env_file: ./app/local.env
    environment:
      - API_HOST=http://main-app:8080
    ports:
      # Expose a port to access the application.
      - 3000:3000
      # Expose a port for storybook.
      - 6006:6006
    volumes:
      # Use a named volume for the node_modules so that the container uses the guest machine's node_modules dir instead of the host machine's node_modules directory, which might be divergent.
      - nextjs_nodemodules:/srv/node_modules

  main-db:
    image: postgres:14-alpine
      # Docs for options to the postgres server command:
    # https://www.postgresql.org/docs/current/app-postgres.html
    command: postgres -c "log_lock_waits=on" -N 1000 -c "fsync=off"
    # Load environment variables for local development. 
    env_file: ./app/local.env
    # Fix running on Apple silicon
    platform: linux/amd64
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data

  # Define one service for the application.
  main-app:
    # This service relies on building from a Dockerfile in this file directory,
    # not on an image repository.
    build: ./app
    # Expose the application port for local development.

    # Load environment variables for local development
    env_file: ./app/local.env
    # NOTE: These values take precedence if the same value is specified in the env_file.
    environment:
      # The env_file defines DB_HOST=localhost for accessing a non-dockerized database. 
      # In the docker-compose, we tell the app to use the dockerized database service 
      - DB_HOST=main-db
    # Fix running on Apple silicon
    platform: linux/amd64
    ports: 
      - 8080:8080
    # Mount application directory for local development.
    volumes:
      - ./app:/srv
    depends_on:
      - main-db

volumes:
  dbdata:
  nextjs_nodemodules:

